OBJECT Modification "Sales Header"(Table 36)
{
  OBJECT-PROPERTIES
  {
    Date=20220218D;
    Time=155632.710T;
    Modified=true;
    Version List=NAVW114.27;
  }
  PROPERTIES
  {
    Target="Sales Header"(Table 36);
  }
  CHANGES
  {
    { CodeModification  ;OriginalCode=BEGIN
                                        TestField("Posting Date");
                                        TestNoSeriesDate(
                                          "Posting No.","Posting No. Series",
                                        #4..25
                                            ConfirmUpdateCurrencyFactor;
                                        end;

                                        if "Posting Date" <> xRec."Posting Date" then
                                          if DeferralHeadersExist then
                                            ConfirmUpdateDeferralDate;
                                        SynchronizeAsmHeader;
                                      END;

                         ModifiedCode=BEGIN
                                        #1..28
                                        SynchronizeAsmHeader;
                                      END;

                         Target="Posting Date"(Field 20).OnValidate }
    { CodeModification  ;OriginalCode=BEGIN
                                        TestStatusOpen;
                                        if ("Location Code" <> xRec."Location Code") and
                                           (xRec."Sell-to Customer No." = "Sell-to Customer No.")
                                        then
                                          MessageIfSalesLinesExist(FieldCaption("Location Code"));

                                        UpdateShipToAddress;
                                        UpdateOutboundWhseHandlingTime;
                                      END;

                         ModifiedCode=BEGIN
                                        #1..7

                                        if "Location Code" <> '' then begin
                                          if Location.Get("Location Code") then
                                            "Outbound Whse. Handling Time" := Location."Outbound Whse. Handling Time";
                                        end else begin
                                          if InvtSetup.Get then
                                            "Outbound Whse. Handling Time" := InvtSetup."Outbound Whse. Handling Time";
                                        end;
                                      END;

                         Target="Location Code"(Field 28).OnValidate }
    { PropertyModification;
                         Target="No. Series"(Field 107);
                         Property=Editable;
                         OriginalValue=false;
                         ModifiedValue=true }
    { CodeModification  ;OriginalCode=BEGIN
                                        if "Posting No. Series" <> '' then begin
                                          GetSalesSetup;
                                          TestNoSeries;
                                          NoSeriesMgt.TestSeries(GetPostingNoSeriesCode,"Posting No. Series");
                                        end;
                                        TestField("Posting No.",'');
                                      END;

                         ModifiedCode=BEGIN
                                        if "Posting No. Series" <> '' then begin
                                         GetSalesSetup;

                                        TestNoSeries;
                                        //  NoSeriesMgt.TestSeries(GetPostingNoSeriesCode,"Posting No. Series");
                                        end;
                                        //TESTFIELD("Posting No.",'');
                                        //
                                        ////ERROR('%1',"Posting No. Series");
                                      END;

                         Target="Posting No. Series"(Field 108).OnValidate }
    { CodeModification  ;OriginalCode=BEGIN
                                        TestStatusOpen;

                                        if "Sell-to Contact No." <> '' then
                                        #4..36
                                              Error(Text038,Cont."No.",Cont.Name,"Sell-to Customer No.");
                                        end;

                                        if "Sell-to Contact No." <> '' then
                                          if Cont.Get("Sell-to Contact No.") then
                                            if ("Salesperson Code" = '') and (Cont."Salesperson Code" <> '') then
                                              Validate("Salesperson Code",Cont."Salesperson Code");

                                        UpdateSellToCust("Sell-to Contact No.");
                                        UpdateSellToCustTemplateCode;
                                        UpdateShipToContact;
                                      END;

                         ModifiedCode=BEGIN
                                        #1..39
                                        #45..47
                                      END;

                         Target="Sell-to Contact No."(Field 5052).OnValidate }
    { Insertion         ;InsertAfter="Assigned User ID"(Field 9000);
                         ChangedElements=FieldCollection
                         {
                           { 50301;  ;Contr. Code/Postn.  Applied;Option ;OptionString="01-Skipper","02-Marine Eng","03-Coxswain","04-Eng Superv","05-Shr Mast/Sail","06-Mec/Carp/Wel/Secu","07-Others" }
                           { 50302;  ;Appraisal Selection ;Option        ;OptionString=" ",Interview,"Skill & Performance";
                                                                          Description=[ ,Interview,Skill & Performance] }
                           { 50303;  ;Skill Score         ;Decimal       ;FieldClass=FlowField;
                                                                          CalcFormula=Sum("Sales Line".Quantity WHERE (Type=CONST(Skill),
                                                                                                                       "Document No."=FIELD("No."),
                                                                                                                       "Document Type"=CONST(Appraisal)));
                                                                          ValidateTableRelation=false;
                                                                          Editable=false }
                           { 50304;  ;Skill Total         ;Decimal       ;FieldClass=FlowField;
                                                                          CalcFormula=Sum("Sales Line".TTSkill WHERE (Type=CONST(Skill),
                                                                                                                      "Document No."=FIELD("No."),
                                                                                                                      "Document Type"=CONST(Appraisal)));
                                                                          Editable=false }
                           { 50305;  ;Skill Percentage    ;Decimal       ;OnLookup=BEGIN
                                                                                     {
                                                                                     //Univision Start 31/10/01 Yusuf
                                                                                       "Skill Percentage":=0;
                                                                                      Larger:= '>';
                                                                                      Precision:=0.1;
                                                                                      IF "Skill Total" > 0 THEN
                                                                                         "Skill Percentage":=("Skill Score"/"Skill Total")*100
                                                                                     ELSE
                                                                                      "Skill Percentage":=0;
                                                                                     "Skill Percentage":=ROUND("Skill Percentage",Precision,Larger);
                                                                                     // Univision Finish 31/10/01 Yusuf
                                                                                     }  //#1
                                                                                   END;
                                                                                    }
                           { 50306;  ;Performance Score   ;Decimal       ;FieldClass=FlowField;
                                                                          CalcFormula=Sum("Sales Line".Quantity WHERE (Type=CONST(Performance),
                                                                                                                       "Document No."=FIELD("No."),
                                                                                                                       "Document Type"=CONST(Appraisal)));
                                                                          Editable=false }
                           { 50307;  ;Performance Total   ;Decimal       ;FieldClass=FlowField;
                                                                          CalcFormula=Sum("Sales Line".TTPerformance WHERE (Type=CONST(Performance),
                                                                                                                            "Document No."=FIELD("No."),
                                                                                                                            "Document Type"=CONST(Appraisal)));
                                                                          Editable=false }
                           { 50308;  ;Performance Percentage;Decimal     ;OnLookup=BEGIN
                                                                                     //Univision Start 31/10/01 Yusuf
                                                                                     "Performance Percentage":=0;

                                                                                      Larger:= '>';
                                                                                      Precision:=0.1;

                                                                                     if "Performance Total" >0 then
                                                                                        "Performance Percentage":=("Performance Score"/"Performance Total")*100
                                                                                     else
                                                                                       "Performance Percentage":=0;
                                                                                     "Performance Percentage":=Round("Performance Percentage",Precision,Larger);
                                                                                     // Univision Finish 31/10/01 Yusuf
                                                                                   END;
                                                                                    }
                           { 50309;  ;Total Percentage    ;Decimal       ;OnLookup=BEGIN
                                                                                     // Univision Start 31/10/01 Yusuf
                                                                                     "Total Percentage":=0;
                                                                                      Larger:= '>';
                                                                                      Precision:=0.1;

                                                                                       ttscore:= "Skill Score"+"Performance Score";
                                                                                      Result:= "Skill Total"+"Performance Total";
                                                                                      if Result>0 then
                                                                                      "Total Percentage":=(ttscore/Result)*100
                                                                                      else
                                                                                      "Total Percentage":=0;
                                                                                     "Total Percentage":=Round("Total Percentage",Precision,Larger);
                                                                                     // Univision Finish 31/10/01 Yusuf
                                                                                   END;
                                                                                    }
                           { 50310;  ;Cgrade              ;Code2          }
                           { 50311;  ;Cstep               ;Code2          }
                           { 50312;  ;Cedamount           ;Decimal       ;FieldClass=FlowField;
                                                                          CalcFormula=Sum("Payroll-Employee Group Lines."."Default Amount" WHERE ("Employee Group"=FIELD(CGrp),
                                                                                                                                                  "Payslip Group ID"=CONST("GROSS PAY")));
                                                                          Editable=false }
                           { 50313;  ;CGrp                ;Code10         }
                           { 50314;  ;Rgrade              ;Code2         ;OnValidate=BEGIN
                                                                                       if StrLen(Rgrade) = 1 then Rgrade:= '0'+Rgrade;
                                                                                       RGrp:=GetGrp(Rgrade,Rstep);
                                                                                     END;
                                                                                      }
                           { 50315;  ;Rstep               ;Code2         ;OnValidate=BEGIN
                                                                                       RGrp:=GetGrp(Rgrade,Rstep);
                                                                                       if StrLen(Rstep) = 1 then Rstep:= '0'+Rstep;
                                                                                     END;
                                                                                      }
                           { 50316;  ;Redamount           ;Decimal       ;FieldClass=FlowField;
                                                                          CalcFormula=Sum("Payroll-Employee Group Lines."."Default Amount" WHERE ("Employee Group"=FIELD(RGrp),
                                                                                                                                                  "Payslip Group ID"=CONST("GROSS PAY")));
                                                                          Editable=false }
                           { 50317;  ;RGrp                ;Code10        ;TableRelation="Payroll-Employee Group Header.";
                                                                          OnValidate=BEGIN
                                                                                       if EmpGrpT.Get(RGrp) then
                                                                                         begin
                                                                                           Rgrade := EmpGrpT.Grade;
                                                                                           Rstep  := EmpGrpT.Step;
                                                                                         end;
                                                                                     END;
                                                                                      }
                           { 50330;  ;Agrade              ;Code2         ;OnValidate=BEGIN
                                                                                       if StrLen(Agrade) = 1 then Agrade:= '0'+Agrade;
                                                                                       AGrp:=GetGrp(Agrade,Astep);
                                                                                     END;
                                                                                      }
                           { 50332;  ;Astep               ;Code2         ;OnValidate=BEGIN
                                                                                       if StrLen(Astep) = 1 then Astep:= '0'+Astep;
                                                                                       AGrp:=GetGrp(Agrade,Astep);
                                                                                     END;
                                                                                      }
                           { 50334;  ;Aedamount           ;Decimal       ;FieldClass=FlowField;
                                                                          CalcFormula=Sum("Payroll-Employee Group Lines."."Default Amount" WHERE ("Employee Group"=FIELD(AGrp),
                                                                                                                                                  "Payslip Group ID"=CONST("GROSS PAY")));
                                                                          Editable=false }
                           { 50336;  ;AGrp                ;Code10        ;OnValidate=BEGIN
                                                                                       if EmpGrpT.Get(AGrp) then
                                                                                         begin
                                                                                           Agrade := EmpGrpT.Grade;
                                                                                           Astep  := EmpGrpT.Step;
                                                                                         end;
                                                                                     END;
                                                                                      }
                           { 50337;  ;Date1               ;Date           }
                           { 50338;  ;Date2               ;Date           }
                           { 50339;  ;Date3               ;Date           }
                           { 50340;  ;Date4               ;Date           }
                           { 50341;  ;Date5               ;Date           }
                           { 50342;  ;Date6               ;Date           }
                           { 50343;  ;Date7               ;Date           }
                           { 50344;  ;Date8               ;Date           }
                           { 50345;  ;Date9               ;Date           }
                           { 50346;  ;Skill1              ;Integer        }
                           { 50347;  ;Skill2              ;Integer        }
                           { 50348;  ;Skill3              ;Integer        }
                           { 50349;  ;Skill4              ;Integer        }
                           { 50350;  ;Skill5              ;Integer        }
                           { 50351;  ;Skill6              ;Integer        }
                           { 50352;  ;Skill7              ;Integer        }
                           { 50353;  ;Skill8              ;Integer        }
                           { 50354;  ;Skill9              ;Integer        }
                           { 50355;  ;Performance1        ;Integer        }
                           { 50356;  ;Performance2        ;Integer        }
                           { 50357;  ;Performance3        ;Integer        }
                           { 50358;  ;Performance4        ;Integer        }
                           { 50359;  ;Performance5        ;Integer        }
                           { 50360;  ;Performance6        ;Integer        }
                           { 50361;  ;Performance7        ;Integer        }
                           { 50362;  ;Performance8        ;Integer        }
                           { 50363;  ;Performance9        ;Integer        }
                           { 50364;  ;Tpercent1           ;Integer        }
                           { 50365;  ;Tpercent2           ;Integer        }
                           { 50366;  ;Tpercent3           ;Integer        }
                           { 50367;  ;Tpercent4           ;Integer        }
                           { 50368;  ;Tpercent5           ;Integer        }
                           { 50369;  ;Tpercent6           ;Integer        }
                           { 50370;  ;Tpercent7           ;Integer        }
                           { 50371;  ;Tpercent8           ;Integer        }
                           { 50372;  ;Tpercent9           ;Integer        }
                           { 50380;  ;Container Code      ;Code10         }
                           { 50381;  ;Seal No             ;Code15         }
                           { 50382;  ;Container Size      ;Option        ;OptionString="20 Ft","40 Ft" }
                           { 50383;  ;Vessel Name         ;Text30         }
                           { 50384;  ;Shipment Month      ;Option        ;OptionString=Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec }
                           { 50385;  ;Total Qty           ;Decimal       ;FieldClass=FlowField;
                                                                          CalcFormula=Sum("Sales Line".Quantity WHERE ("Document Type"=FIELD("Document Type"),
                                                                                                                       "Document No."=FIELD("No.")));
                                                                          TableRelation=Item.Inventory }
                         }
                          }
    { CodeModification  ;OriginalCode=BEGIN
                                        IsHandled := false;
                                        OnBeforeInitInsert(Rec,xRec,IsHandled);
                                        if not IsHandled then
                                        #4..7

                                        OnInitInsertOnBeforeInitRecord(Rec,xRec);
                                        InitRecord;
                                      END;

                         ModifiedCode=BEGIN
                                        #1..10

                                        case "Document Type" of
                                          "Document Type"::Order:
                                            begin
                                              SalesSetup.Get;
                                              "Posting No. Series":=SalesSetup."Posted Exp. Invoice Nos.";
                                            end;
                                        end ;
                                      END;

                         Target=InitInsert(PROCEDURE 61) }
    { CodeModification  ;OriginalCode=BEGIN
                                        GetSalesSetup;
                                        IsHandled := false;
                                        OnBeforeInitRecord(Rec,IsHandled);
                                        #4..65

                                        "Posting Description" := Format("Document Type") + ' ' + "No.";

                                        UpdateOutboundWhseHandlingTime;

                                        "Responsibility Center" := UserSetupMgt.GetRespCenter(0,"Responsibility Center");
                                        "Doc. No. Occurrence" := ArchiveManagement.GetNextOccurrenceNo(DATABASE::"Sales Header","Document Type","No.");

                                        OnAfterInitRecord(Rec);
                                      END;

                         ModifiedCode=BEGIN
                                        #1..68
                                        if InvtSetup.Get then
                                          Validate("Outbound Whse. Handling Time",InvtSetup."Outbound Whse. Handling Time");
                                        UpdateOutboundWhseHandlingTime;
                                        #71..74
                                      END;

                         Target=InitRecord(PROCEDURE 10) }
    { CodeModification  ;OriginalCode=BEGIN
                                        SalesLine.SetRange("Document Type","Document Type");
                                        SalesLine.SetRange("Document No.","No.");
                                        SalesLine.SetRange(Type,SalesLine.Type::Item);
                                        SalesLine.SetFilter("No.",'<>%1','');
                                        SalesLine.SetFilter("Outstanding Quantity",'<>%1',0);
                                        OnCheckItemAvailabilityInLinesOnAfterSetFilters(SalesLine);
                                        if SalesLine.FindSet then
                                          repeat
                                            if ItemCheckAvail.SalesLineCheck(SalesLine) then
                                              ItemCheckAvail.RaiseUpdateInterruptedError;
                                          until SalesLine.Next = 0;
                                      END;

                         ModifiedCode=BEGIN
                                        #1..8
                                            if ItemCheckAvail.SalesLineCheck(SalesLine,true) then
                                              ItemCheckAvail.RaiseUpdateInterruptedError;
                                          until SalesLine.Next = 0;
                                      END;

                         Target=CheckItemAvailabilityInLines(PROCEDURE 142) }
    { Insertion         ;InsertAfter=OnCheckSalesReleaseRestrictions(PROCEDURE 81);
                         ChangedElements=PROCEDURECollection
                         {
                           [LineStart(6239)]
                           PROCEDURE GetGrp@1000000001(grade@1000000000 : Code[10];step@1000000001 : Code[10]) Grp@1000000002 : Code[10];
                           BEGIN
                             Grp:=StaffType+grade+step;
                           END;

                         }
                          }
    { PropertyModification;
                         Target=Text039(Variable 1086);
                         Property=Id;
                         OriginalValue=1086;
                         ModifiedValue=10086 }
    { PropertyModification;
                         Target=PostedDocsToPrintCreatedMsg(Variable 1084);
                         Property=Id;
                         OriginalValue=1084;
                         ModifiedValue=10084 }
    { PropertyModification;
                         Target=DocumentNotPostedClosePageQst(Variable 1061);
                         Property=Id;
                         OriginalValue=1061;
                         ModifiedValue=10061 }
    { PropertyModification;
                         Target=SelectCustomerTemplateQst(Variable 1008);
                         Property=Id;
                         OriginalValue=1008;
                         ModifiedValue=10008 }
    { PropertyModification;
                         Target=ModifyCustomerAddressNotificationLbl(Variable 1062);
                         Property=Id;
                         OriginalValue=1062;
                         ModifiedValue=10062 }
    { PropertyModification;
                         Target=DontShowAgainActionLbl(Variable 1064);
                         Property=Id;
                         OriginalValue=1064;
                         ModifiedValue=10064 }
    { PropertyModification;
                         Target=SellToCustomerTxt(Variable 1052);
                         Property=Id;
                         OriginalValue=1052;
                         ModifiedValue=10052 }
    { PropertyModification;
                         Target=BillToCustomerTxt(Variable 1057);
                         Property=Id;
                         OriginalValue=1057;
                         ModifiedValue=10057 }
    { PropertyModification;
                         Target=ModifySellToCustomerAddressNotificationNameTxt(Variable 1087);
                         Property=Id;
                         OriginalValue=1087;
                         ModifiedValue=10087 }
    { PropertyModification;
                         Target=ModifySellToCustomerAddressNotificationDescriptionTxt(Variable 1098);
                         Property=Id;
                         OriginalValue=1098;
                         ModifiedValue=10098 }
    { PropertyModification;
                         Target=ModifyBillToCustomerAddressNotificationNameTxt(Variable 1089);
                         Property=Id;
                         OriginalValue=1089;
                         ModifiedValue=10089 }
    { PropertyModification;
                         Target=ModifyBillToCustomerAddressNotificationDescriptionTxt(Variable 1099);
                         Property=Id;
                         OriginalValue=1099;
                         ModifiedValue=10099 }
    { PropertyModification;
                         Target=DuplicatedCaptionsNotAllowedErr(Variable 1094);
                         Property=Id;
                         OriginalValue=1094;
                         ModifiedValue=10094 }
    { PropertyModification;
                         Target=PhoneNoCannotContainLettersErr(Variable 1080);
                         Property=Id;
                         OriginalValue=1080;
                         ModifiedValue=10080 }
    { PropertyModification;
                         Target=MissingExchangeRatesQst(Variable 1032);
                         Property=Id;
                         OriginalValue=1032;
                         ModifiedValue=10032 }
    { PropertyModification;
                         Target=SplitMessageTxt(Variable 1079);
                         Property=Id;
                         OriginalValue=1079;
                         ModifiedValue=10079 }
    { PropertyModification;
                         Target=StatusCheckSuspended(Variable 1103);
                         Property=Id;
                         OriginalValue=1103;
                         ModifiedValue=11003 }
    { PropertyModification;
                         Target=ConfirmEmptyEmailQst(Variable 1017);
                         Property=Id;
                         OriginalValue=1017;
                         ModifiedValue=10017 }
    { PropertyModification;
                         Target=RecreateSalesLinesCancelErr(Variable 1104);
                         Property=Id;
                         OriginalValue=1104;
                         ModifiedValue=11004 }
    { PropertyModification;
                         Target=CalledFromWhseDoc(Variable 1106);
                         Property=Id;
                         OriginalValue=1106;
                         ModifiedValue=11006 }
    { Insertion         ;InsertAfter=ShippingAdviceErr(Variable 1029);
                         ChangedElements=VariableCollection
                         {
                           "--------"@1123 : Integer;
                           Emp@1122 : Record Employee;
                           App@1119 : Record Applicants;
                           EmpGrpT@1118 : Record "Payroll-Employee Group Header.";
                           ttscore@1116 : Decimal;
                           Result@1115 : Decimal;
                           Precision@1114 : Decimal;
                           Cedamount@1113 : Decimal;
                           Redamount@1112 : Decimal;
                           Aedamount@1111 : Decimal;
                           Larger@1109 : Text[30];
                           StaffType@1107 : Code[1];
                           Rgrade@1106 : Code[2];
                           Agrade@1104 : Code[2];
                           Rstep@1103 : Code[2];
                           Astep@1099 : Code[2];
                           RGrp5@1086 : Code[10];
                           length@1084 : Integer;
                         }
                          }
  }
  CODE
  {

    BEGIN
    END.
  }
}

