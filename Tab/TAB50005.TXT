OBJECT Table 50005 Loan.
{
  OBJECT-PROPERTIES
  {
    Date=20080417D;
    Time=121026T;
    Modified=true;
    Version List=LOAN1.0;
  }
  PROPERTIES
  {
    DataCaptionFields="Loan ID";
    OnInsert=BEGIN
               if "Loan ID" = '' then begin
                 PaySetup.Reset;
                 PaySetup.Find('-');
                 PaySetup.TestField(PaySetup."Loan Nos.");
                 NoSeriesMgt.InitSeries(PaySetup."Loan Nos.",PaySetup."Loan Nos.",0D,"Loan ID",PaySetup."Loan Nos.");
                 "Counter Acct. Type" := "Counter Acct. Type"::Finance;
                 "Counter Acct. No." := PaySetup."Staff Loans Control Account";
               end;
             END;

    OnModify=BEGIN
               TestField("Loan ID");
               TestField("Staff No.");
               TestField(Description);
               TestField("Acct. No.");
               TestField("Loan Amount");
               TestField("Start Period");
               TestField("Monthly Repayment");
               TestField("Loan ED");
               TestField("Number of Payments");

               userrec.Get(UserId);

               if "Loan Created" and (not userrec."Create Loan") then
                 begin
                   if ("Loan Amount" <> xRec."Loan Amount") or
                      ("Start Period" <> xRec."Start Period") or
                      ("Interest Percent" <> xRec."Interest Percent") then
                         Error('You Cannot MODIFY a Created Loan!');
                 end;
             END;

    OnDelete=BEGIN
               CalcFields("Remaining Amount");
               if "Remaining Amount"<>0 then Error('Loan has not been fully repaid, cannot be deleted!');
             END;

    LookupPageID="Loan List";
  }
  FIELDS
  {
    { 1   ;   ;Loan ID             ;Code10         }
    { 2   ;   ;Staff No.           ;Code20        ;TableRelation=Employee."No.";
                                                   OnValidate=BEGIN
                                                                StaffRec.Get("Staff No.");
                                                                "Staff Name":=StaffRec.FullName;
                                                                "Job Title":=StaffRec."Job Title";
                                                                Department:= StaffRec."Global Dimension 1 Code";
                                                                "Date of Joining":=StaffRec."Employment Date";
                                                                "Acct. Type" := StaffRec."Acct. type";
                                                                "Acct. No."  := StaffRec."Acct. No";
                                                                EmployeeGrp:= StaffRec."Employee Group";
                                                                "Emp. Status":= StaffRec.Status;
                                                                "AnnualBasic(1/2)" :=(12 * Payrec.GetBasic(StaffRec."Employee Group"))/2;

                                                                if CustRec.Get("Acct. No.") then
                                                                begin
                                                                  CustRec.CalcFields(CustRec."Balance (LCY)");
                                                                  if CustRec."Balance (LCY)"<0 then
                                                                  Message('Staff Loan Balance is %1, \'
                                                                         +'MD''s approval would be required to complete the operation',-1*CustRec."Balance (LCY)");
                                                                end;
                                                              END;

                                                   NotBlank=true }
    { 3   ;   ;Staff Name          ;Text40        ;NotBlank=true }
    { 4   ;   ;Loan Type           ;Option        ;OnValidate=BEGIN
                                                                Description := Format("Loan Type");
                                                                "Journal Batch":=Format("Loan Type");
                                                              END;

                                                   OptionString=Advance,IOU,Loan,Car,Housing,Incidental,Personal,Rent }
    { 5   ;   ;Description         ;Text30        ;NotBlank=true }
    { 6   ;   ;Acct. Type          ;Option        ;OptionString=Finance,Staff,Supplier }
    { 7   ;   ;Acct. No.           ;Code20        ;TableRelation=IF ("Acct. Type"=CONST(Finance)) "G/L Account"."No."
                                                                 ELSE IF ("Acct. Type"=CONST(Staff)) Customer."No."
                                                                 ELSE IF ("Acct. Type"=CONST(Supplier)) Vendor."No." }
    { 8   ;   ;Counter Acct. Type  ;Option        ;OptionString=Finance,Staff,Supplier }
    { 9   ;   ;Counter Acct. No.   ;Code20        ;TableRelation=IF ("Counter Acct. Type"=CONST(Finance)) "G/L Account"."No."
                                                                 ELSE IF ("Counter Acct. Type"=CONST(Staff)) Customer."No." WHERE ("No."=FILTER('E'..'F'))
                                                                 ELSE IF ("Counter Acct. Type"=CONST(Supplier)) Vendor."No." }
    { 10  ;   ;Loan Amount         ;Decimal       ;OnValidate=BEGIN
                                                                if ("Loan Amount" >"AnnualBasic(1/2)") then
                                                                  Message('The Loan is more than 1/2 of employee Annual Basic!');
                                                                if ("Number of Payments"<>0) then
                                                                  "Monthly Repayment" := Round(LPlusInt/"Number of Payments",0.01,'>')
                                                                else
                                                                  "Monthly Repayment" := 0;
                                                              END;

                                                   MinValue=0 }
    { 11  ;   ;Start Period        ;Code10        ;TableRelation="Payroll-Periods."."Period Code" }
    { 12  ;   ;Number of Payments  ;Integer       ;OnValidate=BEGIN
                                                                if ("Number of Payments"<>0) then
                                                                  "Monthly Repayment" := Round(LPlusInt/"Number of Payments",0.01,'>')
                                                                else
                                                                  "Monthly Repayment" := 0;
                                                              END;

                                                   MinValue=0 }
    { 13  ;   ;Monthly Repayment   ;Decimal       ;OnValidate=BEGIN
                                                                if ("Monthly Repayment"<>0) then
                                                                  "Number of Payments" := Round(LPlusInt/"Monthly Repayment",1,'>')
                                                                else
                                                                  "Number of Payments" := 0;
                                                              END;
                                                               }
    { 14  ;   ;Open(Y/N)           ;Boolean        }
    { 15  ;   ;Suspended(Y/N)      ;Boolean        }
    { 16  ;   ;Loan ED             ;Code10        ;TableRelation="Payroll-E/D Codes."."E/D Code";
                                                   OnValidate=BEGIN
                                                                EDRec.Get("Loan ED");
                                                                if not EDRec."Loan (Y/N)" then Error('The selected ED Code is not a loan code!~');
                                                              END;
                                                               }
    { 17  ;   ;Remaining Amount    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE ("Customer No."=FIELD("Acct. No."),
                                                                                                                      "Loan ID"=FIELD("Loan ID")));
                                                   Editable=false }
    { 18  ;   ;Posting Date for Loan;Date          }
    { 19  ;   ;Voucher No. for Loan;Code10         }
    { 20  ;   ;Journal Batch       ;Code10        ;TableRelation="Gen. Journal Batch".Name;
                                                   ValidateTableRelation=false }
    { 21  ;   ;Loan Created        ;Boolean        }
    { 22  ;   ;Actual Ledger Bal.  ;Decimal       ;FieldClass=Normal;
                                                   Editable=false }
    { 23  ;   ;Interest Percent    ;Decimal       ;OnValidate=BEGIN
                                                                if ("Number of Payments"<>0) then
                                                                  "Monthly Repayment" := Round(LPlusInt/"Number of Payments",0.01,'>')
                                                                else
                                                                  "Monthly Repayment" := 0;
                                                              END;

                                                   DecimalPlaces=2:2;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 50018;  ;Department          ;Text30         }
    { 50019;  ;Date of Joining     ;Date           }
    { 50020;  ;EmployeeGrp         ;Code10         }
    { 50021;  ;Emp. Status         ;Option        ;OptionString=Active,Inactive,Terminated }
    { 50022;  ;AnnualBasic(1/2)    ;Decimal        }
    { 50023;  ;MD. Approved        ;Boolean       ;OnValidate=BEGIN
                                                                // PaySetup.RESET;  MP 080417
                                                                // PaySetup.FIND('-');
                                                                // IF (USERID <> PaySetup."MD ID") AND
                                                                //   (USERID <> PaySetup."Accountant 1")  AND
                                                                //   (USERID <> PaySetup."Accountant 2")  AND
                                                                //   (USERID <> PaySetup."Accountant 3")  THEN
                                                                // ERROR('Please refer case to System Administrator');
                                                              END;
                                                               }
    { 50024;  ;Loan ID Filter      ;Code10         }
    { 50025;  ;Job Title           ;Text30         }
  }
  KEYS
  {
    {    ;"Loan ID"                               ;Clustered=true }
    {    ;"Staff No.","Start Period","Open(Y/N)","Suspended(Y/N)" }
    {    ;"Loan Type","Posting Date for Loan","Voucher No. for Loan","Staff No.";
                                                   SumIndexFields="Loan Amount" }
    {    ;"Staff No.","Loan ID"                   ;SumIndexFields="Loan Amount" }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      NoSeriesMgt@1000000011 : Codeunit NoSeriesManagement;
      StaffRec@1000000000 : Record Employee;
      EDRec@1000000001 : Record "Payroll-E/D Codes.";
      GlRec@1000000002 : Record "Gen. Journal Line";
      GlRec1@1000000003 : Record "Gen. Journal Line";
      ACSETREC@1000000004 : Record "General Ledger Setup";
      LoanRec@1000000006 : Record "Loan.";
      Genbatch@1000000007 : Record "Gen. Journal Batch";
      PaySetup@1000000008 : Record "ASL Payroll Setup";
      Payrec@1000000014 : Record "Payroll-Employee Group Header.";
      VendRec@1000000013 : Record Vendor;
      CustRec@1000000009 : Record Customer;
      EmGrospay@1000000010 : Decimal;
      EmGrade@1000000005 : Code[10];
      userrec@1000000012 : Record "User Setup";

    [LineStart(114481)]
    PROCEDURE InserGlLine@1();
    BEGIN
      userrec.Get(UserId);
      if not userrec."Create Loan" then Error('You may not create Loan');
      ApprovedLoan;
      TestField("Loan ID");
      TestField("Staff No.");
      //SETFILTER();
      CalcFields("Remaining Amount");
      if "Remaining Amount">0 then Error('The loan cannot be posted -\'+
                                         'Has been posted previously!' );
      if "Loan Created" then Error('Loan Has been Created Before');
      StaffRec.Get("Staff No.");
      TestField("Journal Batch");
      if not Genbatch.Get('GENERAL',"Journal Batch") then
      begin
        Genbatch.Init;
        Genbatch."Journal Template Name" := 'GENERAL';
        Genbatch.Name := "Journal Batch";
        Genbatch."Shortcut Dimension 1 Code":= StaffRec."Global Dimension 1 Code";
        Genbatch."Shortcut Dimension 2 Code":= StaffRec."Region Code";
        Genbatch.Insert;
      end;

      GlRec.Init;
      GlRec."Loan ID":="Loan ID";

      {Transfer Loan Amount}
      GlRec.Validate("Journal Template Name",'GENERAL');
      GlRec.Validate("Journal Batch Name","Journal Batch");
      GlRec1.SetRange(GlRec1."Journal Template Name",GlRec."Journal Template Name");
      GlRec1.SetRange(GlRec1."Journal Batch Name",GlRec."Journal Batch Name");
      if GlRec1.Find('+') then
      GlRec."Line No." := GlRec1."Line No."+10 else
      GlRec."Line No." := 10;

      TestField("Loan ID");
      TestField("Staff No.");
      TestField("Acct. No.");
      TestField("Loan Amount");
      TestField("Loan ED");
      TestField("Posting Date for Loan");
      TestField("Voucher No. for Loan");

      GlRec.Validate("Account Type","Acct. Type");
      GlRec.Validate("Account No.","Acct. No.");
      GlRec.Validate("Posting Date","Posting Date for Loan");
      GlRec.Validate("Shortcut Dimension 1 Code",StaffRec."Global Dimension 1 Code");
      GlRec.Validate("Document No.","Voucher No. for Loan");
      GlRec.Validate("External Document No.","Voucher No. for Loan");
      GlRec.Description:=CopyStr("Staff Name"+' '+Description,1,MaxStrLen(GlRec.Description));
      GlRec.Validate(Amount,"Loan Amount");
      GlRec."Shortcut Dimension 2 Code":=StaffRec."Global Dimension 2 Code";

      GlRec.Insert;

      {Transfer Interest Amount}
      if "Interest Percent"<>0 then
      begin
      GlRec.Validate("Journal Template Name",'GENERAL');
      GlRec.Validate("Journal Batch Name","Journal Batch");
      GlRec1.SetRange(GlRec1."Journal Template Name",GlRec."Journal Template Name");
      GlRec1.SetRange(GlRec1."Journal Batch Name",GlRec."Journal Batch Name");
      if GlRec1.Find('+') then
      GlRec."Line No." := GlRec1."Line No."+10 else
      GlRec."Line No." := 20;

      TestField("Loan ID");
      TestField("Staff No.");
      TestField("Acct. No.");
      TestField("Loan Amount");
      TestField("Loan ED");
      TestField("Posting Date for Loan");
      TestField("Voucher No. for Loan");

      GlRec.Validate("Account Type","Acct. Type");
      GlRec.Validate("Account No.","Acct. No.");
      GlRec.Validate("Posting Date","Posting Date for Loan");
      GlRec.Validate("Shortcut Dimension 1 Code",StaffRec."Global Dimension 1 Code");
      GlRec.Validate("Document No.","Voucher No. for Loan");
      GlRec.Description:='Interest for Loan '+"Loan ID";
      GlRec.Validate(Amount,LPlusInt-"Loan Amount");

      {Get the Interest Account}
      PaySetup.Reset;
      PaySetup.Find('-');
      GlRec.Validate("Bal. Account Type",GlRec."Bal. Account Type"::"G/L Account");
      GlRec.Validate("Bal. Account No.",PaySetup."Staff Loans Interest Account");
      GlRec."Shortcut Dimension 2 Code":=StaffRec."Global Dimension 2 Code";
      GlRec."Loan ID":="Loan ID";
      GlRec.Insert;
      end;

      "Loan Created" := true;
      Modify;
    END;

    [LineStart(114576)]
    PROCEDURE AssistEdit@2(LRec@1000000000 : Record "Loan.") : Boolean;
    BEGIN
      with LoanRec do begin
        LoanRec := Rec;
        PaySetup.Get;
        PaySetup.TestField(PaySetup."Loan Nos.");
        if NoSeriesMgt.SelectSeries(PaySetup."Loan Nos.",PaySetup."Loan Nos.",PaySetup."Loan Nos.")
        then begin
          PaySetup.Get;
          PaySetup.TestField(PaySetup."Loan Nos.");
          NoSeriesMgt.SetSeries("Loan ID");
          Rec := LoanRec;
          exit(true);
        end;
      end;
    END;

    [LineStart(114591)]
    PROCEDURE LPlusInt@8() : Decimal;
    BEGIN
      exit("Loan Amount"*("Interest Percent"+100)/100);
    END;

    [LineStart(114594)]
    PROCEDURE ApprovedLoan@1000000000();
    BEGIN
      if CustRec.Get("Acct. No.") then
      begin
        CustRec.CalcFields(CustRec."Balance (LCY)");
        if (CustRec."Balance (LCY)"<0) and not "MD. Approved" then
        Error('Previous Balance for Staff is %1 \+'
             +'MD approval is required for the next Loan',-1*CustRec."Balance (LCY)");
      end;
    END;

    BEGIN
    END.
  }
}

