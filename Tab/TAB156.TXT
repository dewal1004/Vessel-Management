OBJECT Modification Resource(Table 156)
{
  OBJECT-PROPERTIES
  {
    Date=20021219D;
    Time=120000T;
    Version List=NAVW114.08;
  }
  PROPERTIES
  {
    Target=Resource(Table 156);
  }
  CHANGES
  {
    { PropertyModification;
                         Target="Base Unit of Measure"(Field 18);
                         Property=TableRelation;
                         OriginalValue="Unit of Measure";
                         ModifiedValue="Unit of Measure" WHERE (UOMTYPE=CONST(Standard)) }
    { Insertion         ;InsertAfter="In Customer Zone"(Field 5902);
                         ChangedElements=FieldCollection
                         {
                           { 50300;  ;Posted              ;Boolean        }
                           { 50301;  ;Sick Leave          ;Boolean        }
                           { 50302;  ;Annual Leave        ;Boolean        }
                           { 50303;  ;Casual Leave        ;Boolean        }
                           { 50304;  ;Suspension          ;Boolean        }
                           { 50305;  ;Posted To Operation ;Integer       ;BlankZero=true }
                           { 50306;  ;Posted To Operation Voyage No.;Code10;
                                                                          FieldClass=FlowField;
                                                                          CalcFormula=Max("Job Planning Line"."Job No." WHERE (Type=CONST(Resource),
                                                                                                                               "No."=FIELD("No."),
                                                                                                                               "Ended Voyage"=CONST(false))) }
                           { 50320;  ;Points              ;Decimal       ;FieldClass=FlowField;
                                                                          CalcFormula=Sum(Job."Points Sort Bay" WHERE (Captain=FIELD("No."),
                                                                                                                       "Voyage Ended"=CONST(false)));
                                                                          DecimalPlaces=0:5;
                                                                          Editable=false }
                           { 50322;  ;Points Sort Bay     ;Decimal       ;Description=To retain Value from calculated field points in prep for sorting the records }
                           { 50324;  ;Points Average      ;Decimal       ;FieldClass=FlowField;
                                                                          CalcFormula=Average(Job."Points Sort Bay" WHERE (Captain=FIELD("No."),
                                                                                                                           "Points Sort Bay"=FILTER(<>0),
                                                                                                                           "Voyage Ended"=CONST(false)));
                                                                          DecimalPlaces=0:5;
                                                                          Description=Average of only Vessels with Points;
                                                                          Editable=false }
                           { 50326;  ;Points Average Sort Bay;Decimal    ;Description=To retain Average point }
                           { 50327;  ;Country Code        ;Code10        ;CaptionML=ENU=Country Code }
                           { 50328;  ;Passport No.        ;Code15         }
                           { 50329;  ;Nationality         ;Option        ;OptionCaptionML=ENU=,Nigerian,Indian,Ghanaian;
                                                                          OptionString=,Nigerian,Indian,Ghanaian }
                           { 50330;  ;Valid From          ;Date           }
                           { 50331;  ;Valid To            ;Date           }
                         }
                          }
    { Deletion          ;Target=Type(Key);
                         ChangedElements=KeyCollection
                         {
                           {    ;Type                                     }
                         }
                          }
    { Insertion         ;InsertAfter="Gen. Prod. Posting Group"(Key);
                         ChangedElements=KeyCollection
                         {
                           {    ;Posted                                   }
                           {    ;"Points Sort Bay"                        }
                         }
                          }
    { Insertion         ;InsertAfter="Base Unit of Measure"(Key);
                         ChangedElements=KeyCollection
                         {
                           {    ;"Points Average Sort Bay"                }
                         }
                          }
    { Move              ;Target="Base Unit of Measure"(Key);
                         InsertAfter="Gen. Prod. Posting Group"(Key) }
    { CodeModification  ;OriginalCode=BEGIN
                                        CheckJobPlanningLine;

                                        MoveEntries.MoveResEntries(Rec);
                                        #4..40
                                        ResUnitMeasure.DeleteAll;

                                        SalesOrderLine.SetCurrentKey(Type,"No.");
                                        SalesOrderLine.SetRange(Type,SalesOrderLine.Type::Resource);
                                        SalesOrderLine.SetRange("No.","No.");
                                        if SalesOrderLine.FindFirst then
                                          Error(SalesDocumentExistsErr,"No.",SalesOrderLine."Document Type");

                                        if ExistUnprocessedTimeSheets then
                                          Error(Text006,TableCaption,"No.");

                                        DimMgt.DeleteDefaultDim(DATABASE::Resource,"No.");
                                      END;

                         ModifiedCode=BEGIN
                                        #1..43
                                        SalesOrderLine.SetFilter("Document Type",'%1|%2',
                                          SalesOrderLine."Document Type"::Order,
                                          SalesOrderLine."Document Type"::Appraisal);
                                        SalesOrderLine.SetRange(Type,SalesOrderLine.Type::Resource);
                                        SalesOrderLine.SetRange("No.","No.");
                                        if SalesOrderLine.FindFirst then begin
                                          if SalesOrderLine."Document Type" = SalesOrderLine."Document Type"::Order then
                                            Error(Text000,TableCaption,"No.");
                                          if SalesOrderLine."Document Type" = SalesOrderLine."Document Type"::Appraisal then
                                            Error(Text003,TableCaption,"No.");
                                        end;
                                        #48..52
                                      END;

                         Target=OnDelete }
    { CodeModification  ;OriginalCode=BEGIN
                                        if "No." = '' then begin
                                          ResSetup.Get;
                                          ResSetup.TestField("Resource Nos.");
                                        #4..6
                                        if GetFilter("Resource Group No.") <> '' then
                                          if GetRangeMin("Resource Group No.") = GetRangeMax("Resource Group No.") then
                                            Validate("Resource Group No.",GetRangeMin("Resource Group No."));

                                        DimMgt.UpdateDefaultDim(
                                          DATABASE::Resource,"No.",
                                          "Global Dimension 1 Code","Global Dimension 2 Code");
                                      END;

                         ModifiedCode=BEGIN
                                        #1..9
                                        "Global Dimension 2 Code":='ATLANTIC';     //AAA - Oct 2002
                                        #11..13
                                          userrec.Get(UserId);
                                        if not userrec."Edit Resource" then
                                        Error('You cannot make changes in this form');
                                      END;

                         Target=OnInsert }
    { CodeModification  ;OriginalCode=BEGIN
                                        "Last Date Modified" := Today;
                                      END;

                         ModifiedCode=BEGIN
                                        {
                                        userrec.GET(USERID);
                                                       IF NOT userrec."Edit Resource" THEN
                                                         ERROR('You cannot make changes in this PAGE');
                                        "Last Date Modified" := TODAY;
                                        }
                                      END;

                         Target=OnModify }
    { Insertion         ;InsertAfter=CheckJobPlanningLine(PROCEDURE 34);
                         ChangedElements=PROCEDURECollection
                         {
                           [LineStart(28356)]
                           LOCAL PROCEDURE "Employee No."@14() : Text[100];
                           BEGIN
                             employee.SetCurrentKey(employee."Resource No.");
                             employee.SetRange(employee."Resource No.","No.");
                             if employee.Find('-') then
                               exit(employee."No.");
                           END;

                         }
                          }
    { Deletion          ;Target=SalesDocumentExistsErr(Variable 1028);
                         ChangedElements=VariableCollection
                         {
                           SalesDocumentExistsErr@1028 : TextConst '@@@="%1 = Resource No.";ENU=You cannot delete resource %1 because there are one or more outstanding %2 that include this resource.';
                         }
                          }
    { PropertyModification;
                         Target=PrivacyBlockedPostErr(Variable 1000);
                         Property=Id;
                         OriginalValue=1000;
                         ModifiedValue=10000 }
    { PropertyModification;
                         Target=PrivacyBlockedErr(Variable 1021);
                         Property=Id;
                         OriginalValue=1021;
                         ModifiedValue=10021 }
    { PropertyModification;
                         Target=ConfirmBlockedPrivacyBlockedQst(Variable 1030);
                         Property=Id;
                         OriginalValue=1030;
                         ModifiedValue=10030 }
    { PropertyModification;
                         Target=CanNotChangeBlockedDueToPrivacyBlockedErr(Variable 1029);
                         Property=Id;
                         OriginalValue=1029;
                         ModifiedValue=10029 }
    { Insertion         ;ChangedElements=VariableCollection
    {
      Text000@1000 : TextConst 'ENU=You cannot delete %1 %2 because there are one or more outstanding Sales Orders that include this resource.';
    }
     }
    { Insertion         ;InsertAfter=Text002(Variable 1019);
                         ChangedElements=VariableCollection
                         {
                           Text003@1021 : TextConst 'ENU=You cannot delete %1 %2 because there are one or more outstanding Sales Return Orders that include this resource.';
                         }
                          }
    { Insertion         ;InsertAfter=CannotDeleteResourceErr(Variable 1027);
                         ChangedElements=VariableCollection
                         {
                           "--"@1030 : Integer;
                           employee@1029 : Record Employee;
                           userrec@1028 : Record "User Setup";
                         }
                          }
  }
  CODE
  {

    BEGIN
    END.
  }
}

